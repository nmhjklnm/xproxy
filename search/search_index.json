{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"XProxy","text":""},{"location":"#project-introduction","title":"Project Introduction","text":"<p>xproxy is a lightweight proxy IP management framework that provides fine-grained control for proxies, compatible with both short-lived and long-lived proxies, and supports multiple vendors.</p> <p>Short-lived proxies are cheap but have a very short lifespan, often expiring within seconds. To effectively utilize these proxies, fine-grained control and management are required. xproxy provides various features and functionalities to help users manage and use proxies easily, while also supporting compatibility and sharing of proxies from multiple vendors.</p>"},{"location":"#features","title":"Features","text":"<ol> <li>Fine-grained control: Manage proxies with detailed attributes for precise control, including creation time, last used time, usage count, maximum usage count, expiry time, etc.</li> <li>Automatic rotation: Support periodic rotation of proxies or rotation when the proxy pool is below a minimum threshold. You can set a minimum number of IPs for the proxy pool, and it will rotate proxies when the count falls below this number.</li> <li>Proxy validation: Automatically check and validate the usage count and expiration time of proxies, and support actively marking proxies as invalid to ensure they are used within their valid period.</li> <li>Customizable: Easily extendable to share proxies from different sources.</li> </ol>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install xproxy\n</code></pre>"},{"location":"#example","title":"Example","text":"<pre><code>from xproxy.manager import DuoMiProxyManager\nimport requests\n\n# Proxy manager that actively records invalid proxies to prevent reuse and maintains the number of valid proxies in the pool\nproxy_manager = DuoMiProxyManager(\n    proxy_url='http://api.dmdaili.com/dmgetip.asp?apikey=3be53e22&amp;pwd=4f2799827bfe9c6f0e2a64749cf5f3f6&amp;getnum=50&amp;httptype=1&amp;geshi=2&amp;fenge=1&amp;fengefu=&amp;operate=all',\n)\n\nproxy = proxy_manager.get_order_proxy()  # proxy_manager.get_random_proxy()\nresponse = requests.get(url, proxies={\"http\":  str(proxy.url), \"https\": str(proxy.url)})\n\nif response.status_code != 200:\n    proxy_manager.mark_proxy_invalid(proxy.url)  # Actively mark the proxy as invalid\n</code></pre>"},{"location":"#usage-guide","title":"Usage Guide","text":"<p>For detailed usage instructions, please refer to the xproxy Documentation.</p>"},{"location":"#todo","title":"TODO","text":"<ul> <li>[x] Fine-grained control: Automatically check and verify the usage count and expiration time of proxies to ensure they are used within their valid period.</li> <li>[ ] Multi-vendor compatibility: Support obtaining proxies from different sources and allow sharing of these proxies.</li> <li>[ ] Visualization monitoring: Provide visualization tools for monitoring proxy usage.</li> <li>[ ] Local server support: Enable starting a local server to access proxy management functionalities via API.</li> </ul>"},{"location":"%20API%20Reference/","title":"API Reference","text":"<p>This section provides the API reference for the xproxy library. Here you can find detailed information about core classes and methods.</p>"},{"location":"%20API%20Reference/#core-classes","title":"Core Classes","text":"<p>The core functionality of xproxy is primarily provided by two classes: <code>ProxyManager</code> and <code>Proxy</code>.</p>"},{"location":"%20API%20Reference/#proxymanager","title":"ProxyManager","text":"<p><code>ProxyManager</code> is an abstract base class for managing the proxy pool. It provides basic functionality for obtaining, refreshing, and rotating proxies.</p>"},{"location":"%20API%20Reference/#proxy","title":"Proxy","text":"<p>The <code>Proxy</code> class represents a single proxy, containing information such as the proxy's URL, usage count, validity, etc.</p> <p>For specific usage of each class, please refer to other sections.</p>"},{"location":"%20API%20Reference/DuoMi/","title":"DuoMi","text":""},{"location":"%20API%20Reference/DuoMi/#xproxy.manager.DuoMiProxyManager","title":"<code>DuoMiProxyManager</code>","text":"<p>               Bases: <code>ProxyManager</code></p> Source code in <code>xproxy/manager/duomi.py</code> <pre><code>class DuoMiProxyManager(ProxyManager):\n    def __init__(self, proxy_url: str, max_use_count: Optional[int] = 10, min_valid_proxies: int = 3, proxy_expiry_seconds: Optional[int] = None, rotate_seconds: Optional[int] = 60):\n        self.proxy_url = proxy_url\n        super().__init__(max_use_count, min_valid_proxies,\n                    proxy_expiry_seconds, rotate_seconds)\n\n    def get_proxies(self) -&gt; List[Dict[str, Optional[str]]]:\n        response = requests.get(self.proxy_url)\n        proxy_list = response.json()['data']\n        proxies = []\n        for proxy in proxy_list:\n            expiry_time = datetime.datetime.strptime(\n                proxy['endtime'], '%Y/%m/%d %H:%M:%S')\n            proxies.append({\n                'url': f\"http://{proxy['ip']}:{proxy['port']}\",\n                'provider': 'DuoMi',\n                'expiry_time': expiry_time\n            })\n        return proxies\n</code></pre>"},{"location":"zh/","title":"Xproxy","text":""},{"location":"zh/#_1","title":"\u9879\u76ee\u4ecb\u7ecd","text":"<p>xproxy \u662f\u4e00\u4e2a\u4e3a\u4ee3\u7406\u63d0\u4f9b\u7ec6\u7c92\u5ea6\u63a7\u5236\u7684\u8f7b\u91cf\u7ea7\u4ee3\u7406 IP \u7ba1\u7406\u6846\u67b6\uff0c\u517c\u5bb9\u957f\u77ed\u6548\u4ee3\u7406\u548c\u591a\u5382\u5546\u4ee3\u7406\u3002</p> <p>\u5e02\u9762\u4e0a\u7684\u77ed\u6548\u4ee3\u7406\u4ef7\u683c\u4fbf\u5b9c\u4f46\u6709\u6548\u671f\u77ed\uff0c\u901a\u5e38\u5728\u51e0\u5341\u79d2\u5185\u5931\u6548\u3002\u4e3a\u4e86\u6709\u6548\u5229\u7528\u8fd9\u4e9b\u4ee3\u7406\uff0c\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u548c\u7ba1\u7406\u3002xproxy \u63d0\u4f9b\u4e86\u591a\u79cd\u7279\u6027\u548c\u529f\u80fd\uff0c\u5e2e\u52a9\u7528\u6237\u8f7b\u677e\u7ba1\u7406\u548c\u4f7f\u7528\u4ee3\u7406\uff0c\u540c\u65f6\u652f\u6301\u591a\u5382\u5546\u4ee3\u7406\u7684\u517c\u5bb9\u548c\u5171\u7528\u3002</p>"},{"location":"zh/#_2","title":"\u7279\u6027","text":"<ol> <li>\u7ec6\u7c92\u5ea6\u63a7\u5236\uff1a\u901a\u8fc7\u8be6\u7ec6\u7684\u4ee3\u7406\u5c5e\u6027\u7ba1\u7406\uff0c\u5b9e\u73b0\u5bf9\u4ee3\u7406\u7684\u7cbe\u786e\u63a7\u5236\u3002\u5305\u62ec\u4ee3\u7406\u7684\u521b\u5efa\u65f6\u95f4\u3001\u6700\u540e\u4f7f\u7528\u65f6\u95f4\u3001\u4f7f\u7528\u6b21\u6570\u3001\u6700\u5927\u4f7f\u7528\u6b21\u6570\u3001\u8fc7\u671f\u65f6\u95f4\u7b49\u5c5e\u6027\u3002</li> <li>\u81ea\u52a8\u8f6e\u6362\uff1a\u652f\u6301\u5b9a\u671f\u8f6e\u6362\u4ee3\u7406\u6216\u5728\u4ee3\u7406\u6c60\u5b58\u91cf\u4e0d\u8db3\u65f6\u8fdb\u884c\u8f6e\u6362\u3002\u53ef\u4ee5\u4e3a\u4ee3\u7406\u6c60\u8bbe\u7f6e\u6700\u5c0f IP \u6570\u91cf\uff0c\u5f53\u4f4e\u4e8e\u8fd9\u4e2a\u6570\u91cf\u65f6\u4f1a\u81ea\u52a8\u8fdb\u884c\u8f6e\u6362\u3002</li> <li>\u4ee3\u7406\u9a8c\u8bc1\uff1a\u81ea\u52a8\u68c0\u67e5\u548c\u9a8c\u8bc1\u4ee3\u7406\u7684\u4f7f\u7528\u6b21\u6570\u548c\u8fc7\u671f\u65f6\u95f4\uff0c\u652f\u6301\u4e3b\u52a8\u6807\u8bb0\u5931\u6548\u4ee3\u7406\uff0c\u786e\u4fdd\u4ee3\u7406\u5728\u6709\u6548\u671f\u5185\u4f7f\u7528\u3002</li> <li>\u53ef\u5b9a\u5236\uff1a\u53ef\u4ee5\u8f7b\u677e\u6269\u5c55\uff0c\u5c06\u4e0d\u540c\u6765\u6e90\u4ee3\u7406\u5171\u7528\u3002</li> </ol>"},{"location":"zh/#_3","title":"\u5b89\u88c5","text":"<pre><code>pip install xproxy\n</code></pre>"},{"location":"zh/#_4","title":"\u793a\u4f8b","text":"<pre><code>from xproxy.manager import DuoMiProxyManager\nimport requests\n\n# \u4ee3\u7406\u7ba1\u7406\u5668\uff0c\u4f1a\u4e3b\u52a8\u8bb0\u5f55\u65e0\u6548\u8fc7\u7684\u4ee3\u7406\uff0c\u9632\u6b62\u91cd\u590d\u4f7f\u7528\u65e0\u6548\u4ee3\u7406 \u81ea\u52a8\u7ef4\u62a4\u4ee3\u7406\u6c60\u6709\u6548\u4ee3\u7406\u6570\u91cf\nproxy_manager = DuoMiProxyManager(\n    proxy_url='http://api.dmdaili.com/dmgetip.asp?apikey=3be53e22&amp;pwd=4f2799827bfe9c6f0e2a64749cf5f3f6&amp;getnum=50&amp;httptype=1&amp;geshi=2&amp;fenge=1&amp;fengefu=&amp;operate=all',\n)\n\nproxy = proxy_manager.get_order_proxy()  # proxy_manager.get_random_proxy()\nresponse = requests.get(url, proxies={\"http\":  str(proxy.url), \"https\": str(proxy.url)})\n\nif response.status_code != 200:\n    proxy_manager.mark_proxy_invalid(proxy.url)  # \u53ef\u4ee5\u4e3b\u52a8\u6807\u8bb0\u4ee3\u7406\u4e3a\u65e0\u6548\n</code></pre>"},{"location":"zh/#_5","title":"\u4f7f\u7528\u6559\u7a0b","text":"<p>\u8be6\u7ec6\u7684\u4f7f\u7528\u6559\u7a0b\u8bf7\u53c2\u8003 xproxy \u4f7f\u7528\u6587\u6863\u3002</p>"},{"location":"zh/#todo","title":"TODO","text":"<ul> <li>[x] \u7ec6\u7c92\u5ea6\u63a7\u5236\uff1a\u81ea\u52a8\u68c0\u67e5\u548c\u9a8c\u8bc1\u4ee3\u7406\u7684\u4f7f\u7528\u6b21\u6570\u548c\u8fc7\u671f\u65f6\u95f4\uff0c\u786e\u4fdd\u4ee3\u7406\u5728\u6709\u6548\u671f\u5185\u4f7f\u7528\u3002</li> <li>[ ] \u591a\u5382\u5546\u517c\u5bb9\uff1a\u652f\u6301\u4ece\u4e0d\u540c\u6765\u6e90\u83b7\u53d6\u4ee3\u7406\uff0c\u5e76\u80fd\u534f\u540c\u5171\u7528\u8fd9\u4e9b\u4ee3\u7406\u3002</li> <li>[ ] \u53ef\u89c6\u5316\u76d1\u63a7\uff1a\u63d0\u4f9b\u4ee3\u7406\u4f7f\u7528\u60c5\u51b5\u7684\u53ef\u89c6\u5316\u76d1\u63a7\u5de5\u5177\u3002</li> <li>[ ] \u672c\u5730\u670d\u52a1\u5668\u652f\u6301\uff1a\u53ef\u4ee5\u5728\u672c\u5730\u542f\u52a8\u670d\u52a1\u5668\uff0c\u901a\u8fc7 API \u5f62\u5f0f\u8bbf\u95ee\u4ee3\u7406\u7ba1\u7406\u529f\u80fd\u3002</li> </ul>"}]}